server:
  port: 8888 #本地开发环境时用，生产部署时，应该设置为0，系统随机创建端口
#  servlet:
#    context-path: /dfas-deploy-center
spring:
  profiles:
    active: dev
  application:
    name: dfas-deploy-center #服务名
  servlet:
    multipart:
      max-request-size: 1GB
      max-file-size: 1GB
  cloud:
    config:
      name: common,${spring.application.name}
      label: ${spring.profiles.active:dev} #对应前配置文件的git分支 #/{label}/{application}-{profile}.yml
      profile: ${spring.profiles.active:dev} #对应前配置文件中的{profile}部分
      discovery:
        enabled: true #开启配置中心服务发现
        serviceId: dfas-config-center #配置中心的servieId，即服务名
  ## h2数据库配置
  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:file:./data/db/dfas-deploy-center
    username: root
    password: 1234
    type: com.alibaba.druid.pool.DruidDataSource
    #进行该配置后，每次启动程序，程序都会运行resources/db/schema-h2文件，对数据库的结构进行操作，相当于新建一个表。
    schema: classpath:db/schema-h2.sql
    #进行该配置后，每次启动程序(重启)，程序都会运行resources/data.sql文件，对数据库的数据操作，相当于往表中插入数据。
#    data: classpath:db/data.sql
    druid:
      initial-size: 10
      max-active: 100
      min-idle: 10
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        #login-username: admin
        #login-password: admin
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true
  ##开启web访问
  #是否允许从其他地址访问，还是只能本地访问，默认false
  h2:
    console:
      settings:
        web-allow-others: true
      #访问路径，默认/db-console
      path: /db
      #网页访问开关，默认false
      enabled: true
eureka:
  instance:
    lease-renewal-interval-in-seconds: 10 # 续约更新时间间隔（默认是30秒）
    lease-expiration-duration-in-seconds: 30 #服务失效时间。默认是90秒，也就是如果Eureka Server在90秒内没有接收到来自ServiceProvider的Renew操作，就会把Service Provider剔除
    instance-id: ${spring.cloud.client.hostname}:${spring.cloud.client.ipAddress}:${random.int} #设置实例名
    prefer-ip-address: true #使用IP地址来做注册中心地址
  client:
    InitialInstanceInfoReplicationIntervalSeconds: 1 #最初复制实例信息到eureka服务器所需的时间（s），默认为40秒
    InstanceInfoReplicationIntervalSeconds: 10 #复制实例变化信息到eureka服务器所需要的时间间隔（s），默认为30秒
    RegistryFetchIntervalSeconds: 10 #从eureka服务器注册表中获取注册信息的时间间隔（s），默认为30秒
    service-url:
      defaultZone: http://192.168.0.60:10010/eureka/ #配置服务注册中心 多个用逗号分隔
mybatis-plus:
  # 扫描 mapper.xml
  mapper-locations: classpath:/mapper/**/*Mapper.xml
  configuration:
    jdbc-type-for-null: 'null'
